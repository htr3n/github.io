<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dev on htr3n&#39;s</title>
    <link>https://htr3n.github.io/categories/dev/</link>
    <description>Recent content in Dev on htr3n&#39;s</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 23 Jan 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://htr3n.github.io/categories/dev/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>First Experience with Hugo</title>
      <link>https://htr3n.github.io/2018/01/first-experience-with-hugo/</link>
      <pubDate>Tue, 23 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://htr3n.github.io/2018/01/first-experience-with-hugo/</guid>
      <description>To commence my journey in software development, I have looked for a Web framework to build this blog. I have started writing blog posts mainly using Markdown and plan to migrate other posts to Markdown too. Hence, it&amp;rsquo;s rather obvious to go with built-in or first-class support for Markdown to minimise the migration effort.
Thus far I have not foreseen any great use of extensive backend storage and computation. So I narrowed down my search to static site generators with two prominent candidates Jekyll and Hugo popping up, for instance, here, here, and here.</description>
    </item>
    
    <item>
      <title>LaraMod - Modularised Laravel 5.5</title>
      <link>https://htr3n.github.io/2018/01/laramod/</link>
      <pubDate>Fri, 19 Jan 2018 17:39:00 +0700</pubDate>
      
      <guid>https://htr3n.github.io/2018/01/laramod/</guid>
      <description>Laravel is an amazing emerging, well-designed and well-developed PHP framework. It is currently under active development and has been among top Web development frameworks. The latest version of Laravel, 5.5.x, imposes a conventional project structure that is well documented here. For a simple development project, the structure is totally fine. Nevertheless, unless some necesssary configurations you might not want to mix up your development codes and resources with Laravel&amp;rsquo;s. And you might also want to organise your project into submodules that are assigned to more than one team/person such that they can be developed silmutaneously.</description>
    </item>
    
    <item>
      <title>Apache httpd 2.4 and PHP 7 in macOS</title>
      <link>https://htr3n.github.io/2017/09/apache-httpd-php-macos/</link>
      <pubDate>Mon, 25 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://htr3n.github.io/2017/09/apache-httpd-php-macos/</guid>
      <description>Together, Apache HTTP server, PHP, and MySQL form a powerful and popular combination for Web development. Mac OS X (from 10.0 Cheetah to 10.11 El Capitan) and macOS (10.12 Sierra and above) are often shipped with pre-installed versions of Apache HTTP server and PHP but these are often outdated and merely customised for macOS. The well-known bundles *AMP (e.g. WAMP for Windows, LAMP for Linux, MAMP for Mac) are commonly used but also considered bloated or a bit of overkill for the beginners like me ;).</description>
    </item>
    
  </channel>
</rss>