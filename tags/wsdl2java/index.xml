<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Wsdl2java on htr3n&#39;s</title>
    <link>https://htr3n.github.io/tags/wsdl2java/</link>
    <description>Recent content in Wsdl2java on htr3n&#39;s</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.</copyright>
    <lastBuildDate>Fri, 15 Jun 2018 10:19:31 +1000</lastBuildDate>
    
	<atom:link href="https://htr3n.github.io/tags/wsdl2java/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>The Journey from Apache CXF 2.2 to 3.2</title>
      <link>https://htr3n.github.io/2018/06/the-journey-from-apache-cxf-2.2-to-3.2/</link>
      <pubDate>Fri, 15 Jun 2018 10:19:31 +1000</pubDate>
      
      <guid>https://htr3n.github.io/2018/06/the-journey-from-apache-cxf-2.2-to-3.2/</guid>
      <description>I have used Apache CXF 2.2 to develop Web services for some R&amp;amp;D projects that I took part in. At that time, I considered either Apache Axis/Axis2 or CXF (formerly Codehaus XFire project). I eventually decided to get along with CXF due to its simplicity, quite clear documentation, good support for document-style Web services (+) and many standards, especially JAX-WS and JAX-RS that I really loved. Moreover, Apache CXF also embraces smooth integration with Spring Framework (big plus for me as I was using Spring Web MVC 3 to develop a front-end).</description>
    </item>
    
  </channel>
</rss>