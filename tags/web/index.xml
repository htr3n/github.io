<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Web on htr3n&#39;s</title>
    <link>http://blog.test:8888/tags/web/</link>
    <description>Recent content in Web on htr3n&#39;s</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.</copyright>
    <lastBuildDate>Fri, 06 Jul 2018 10:39:36 +1000</lastBuildDate>
    
	<atom:link href="http://blog.test:8888/tags/web/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CSS Preprocessors</title>
      <link>http://blog.test:8888/2018/07/css-preprocessors/</link>
      <pubDate>Fri, 06 Jul 2018 10:39:36 +1000</pubDate>
      
      <guid>http://blog.test:8888/2018/07/css-preprocessors/</guid>
      <description>A preprocessor, like other data processor components, takes input data and produces some output data according to some predefined sematics and logics. As the name implies, preprocessing stage often happen beforehand. For instance, C preprocessor is often used to handle the C header files, macros, and so on, before compiling.
CSS (Cascading Style Sheet) is a declarative language used for defining the presentation of HTML documents. It was a nice idea to separate data (HTML content) with data formatting (CSS).</description>
    </item>
    
    <item>
      <title>On Spring Framework: Part 3 - Spring Web/MVC</title>
      <link>http://blog.test:8888/2018/06/on-spring-framework-part-3---spring-web/mvc/</link>
      <pubDate>Sun, 17 Jun 2018 12:09:39 +1000</pubDate>
      
      <guid>http://blog.test:8888/2018/06/on-spring-framework-part-3---spring-web/mvc/</guid>
      <description>Spring Web Servlet Lifecycle A Servlet lifecycle is managed by the container in which it has been deployed.
 https://docs.oracle.com/javaee/6/tutorial/doc/bnafi.html http://docs.jboss.org/jbossas/javadoc/7.1.2.Final/javax/servlet/Servlet.html  ContextLoaderListener This is the bootstrap listener to manipulate the Spring&amp;rsquo;s root WebApplicationContext (being shared by all servlets within the web application). Behind the scene, it ties the lifecycle of the ApplicationContext to the lifecycle of the ServletContext. For normal usage scenarios, ContextLoaderListener might be not necessary.
&amp;lt;web-app id=&amp;quot;.</description>
    </item>
    
    <item>
      <title>Learning to &#39;React&#39;</title>
      <link>http://blog.test:8888/2018/05/learning-to-react/</link>
      <pubDate>Tue, 01 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://blog.test:8888/2018/05/learning-to-react/</guid>
      <description></description>
    </item>
    
    <item>
      <title>A different &#39;Vue&#39; on Web app development</title>
      <link>http://blog.test:8888/2018/04/a-different-vue-on-web-app-development/</link>
      <pubDate>Thu, 05 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>http://blog.test:8888/2018/04/a-different-vue-on-web-app-development/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>