<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Articles on htr3n&#39;s</title>
    <link>https://htr3n.github.io/posts/</link>
    <description>Recent content in Articles on htr3n&#39;s</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.</copyright>
    <lastBuildDate>Sat, 14 Jul 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://htr3n.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>A mininal Hugo blogging workflow</title>
      <link>https://htr3n.github.io/2018/07/minimal-hugo-workflow/</link>
      <pubDate>Sat, 14 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://htr3n.github.io/2018/07/minimal-hugo-workflow/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://gohugo.io&#34;&gt;Hugo&lt;/a&gt; is a blazingly fast static site generator based on &lt;a href=&#34;https://golang.org&#34;&gt;Go&lt;/a&gt;. My &lt;a href=&#34;https://htr3n.github.io/2018/01/first-experience-with-hugo/&#34;&gt;first experience with Hugo&lt;/a&gt; was truly pleasant. I appreciate the separation of contents, presentations, and site generation logics in Hugo that leads to less effort for maintenance or switching themes.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Bootstrapping macOS workspace</title>
      <link>https://htr3n.github.io/2018/06/bootstrapping-macos-workspace/</link>
      <pubDate>Wed, 27 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://htr3n.github.io/2018/06/bootstrapping-macos-workspace/</guid>
      <description>&lt;p&gt;I have experienced a number of different Mac systems, ranging from the old white MacBook 2006 to iMac and MacMini 2010 and  lately MacBook Pro 13&amp;rdquo; and 15&amp;rdquo;. Time Machine has helped me a lot to transfer data from the old to the new machine.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>A journey from Apache CXF 2.2 to 3.2</title>
      <link>https://htr3n.github.io/2018/06/apache-cxf-2-to-3/</link>
      <pubDate>Fri, 15 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://htr3n.github.io/2018/06/apache-cxf-2-to-3/</guid>
      <description>&lt;p&gt;I have used &lt;a href=&#34;https://cxf.apache.org&#34;&gt;Apache CXF&lt;/a&gt; 2.2 to develop Web services for some R&amp;amp;D projects that I took part in. At that time, I considered either &lt;a href=&#34;http://axis.apache.org/axis2/java/core&#34;&gt;Apache Axis/Axis2&lt;/a&gt; or CXF (formerly Codehaus XFire project). I eventually decided to get along with CXF due to its simplicity, quite clear documentation, good support for document-style Web services (+) and many standards, especially JAX-WS and JAX-RS.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Integration Laravel 5 and Gentelella admin theme</title>
      <link>https://htr3n.github.io/2018/05/integration-laravel-gentelella/</link>
      <pubDate>Wed, 09 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://htr3n.github.io/2018/05/integration-laravel-gentelella/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/puikinsh/gentelella&#34;&gt;Gentelella&lt;/a&gt; is a very nice and gently-looking &lt;a href=&#34;https://getbootstrap.com&#34;&gt;Bootstrap&lt;/a&gt; based admin theme developed by Aigars Silkalns (known as &lt;a href=&#34;https://github.com/puikinsh&#34;&gt;puikinsh&lt;/a&gt; in Github), who founded &lt;a href=&#34;https://colorlib.com&#34;&gt;colorlib.com&lt;/a&gt;. It can be integrated into several Web application frameworks. In this post, I noted down my simple development exercise in which Gentelella is used to decorated a &lt;a href=&#34;https://github.com/laravel/laravel&#34;&gt;Laravel&lt;/a&gt; 5 based Web application. This task is part of building my PHP based framework &lt;a href=&#34;https://github.com/htr3n/laramod&#34;&gt;LaraMod&lt;/a&gt;. &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Node.js package managers: NPM and Yarn</title>
      <link>https://htr3n.github.io/2018/04/node.js-package-managers-npm-and-yarn/</link>
      <pubDate>Mon, 23 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://htr3n.github.io/2018/04/node.js-package-managers-npm-and-yarn/</guid>
      <description>&lt;p&gt;Node.js is an increasingly popular and widely used JavaScript run-time nowadays. One of the fundamental and important aspects of Node.js, as many others, is to manage the dependencies among software artefacts at both compilation and run-time, front-end and back-end, JavaScripts and non-JavaScript resources.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Confusing Hugo issues: datetime and &#39;isset&#39;</title>
      <link>https://htr3n.github.io/2018/03/confusing-hugo-issues-datetime-and-isset/</link>
      <pubDate>Sat, 31 Mar 2018 08:55:31 +1100</pubDate>
      
      <guid>https://htr3n.github.io/2018/03/confusing-hugo-issues-datetime-and-isset/</guid>
      <description>Yesterday I got notified from Github for two opening issues of the Hugo&amp;rsquo;s theme hyde-hyde I have ported and developed.
The newest one is reported by jdayton3 (Jonathan Dayton) on wrong dates shown up. The issue seems very strange and difficult to spot. It took me a while to research around and found some relevant reports by Paul Heinlein and Dana Woodman, that Hugo date/time formatting is internally based on Golang, and therefore, uses a smart but confusing convention.</description>
    </item>
    
    <item>
      <title>Getting started with Webpack</title>
      <link>https://htr3n.github.io/2018/02/getting-started-webpack/</link>
      <pubDate>Fri, 16 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://htr3n.github.io/2018/02/getting-started-webpack/</guid>
      <description>&lt;p&gt;Per definition &lt;a href=&#34;https://webpack.js.org/concepts&#34;&gt;here&lt;/a&gt;, Webpack is a &lt;em&gt;static module bundler&lt;/em&gt; for Web applications. It analyses and processes the &lt;em&gt;input application&lt;/em&gt; and generates output &lt;em&gt;bundles&lt;/em&gt;. The design of Webpack architecture is highly modularised and extendable. In this post, I share here some notes on major aspects of Webpack since I&amp;rsquo;ve started learning it.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>First experience with Hugo</title>
      <link>https://htr3n.github.io/2018/01/first-experience-with-hugo/</link>
      <pubDate>Tue, 23 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://htr3n.github.io/2018/01/first-experience-with-hugo/</guid>
      <description>&lt;p&gt;To commence my journey in software development, I have looked for a Web framework to build this blog. I have started writing blog posts mainly using (Multi)Markdown and plan to migrate other posts to Markdown too. Thus, it&amp;rsquo;s rather natural to go with built-in or first-class support for Markdown to minimise the migration effort.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LaraMod - Modularised Laravel 5</title>
      <link>https://htr3n.github.io/2018/01/laramod/</link>
      <pubDate>Fri, 19 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://htr3n.github.io/2018/01/laramod/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://laravel.com&#34;&gt;Laravel&lt;/a&gt; is an amazing emerging, well-designed and well-developed PHP framework. It is currently under active development and has been among top Web development frameworks. The latest version of Laravel 5 imposes a conventional project structure that is well documented &lt;a href=&#34;https://laravel.com/docs/5.5/structure&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Apache httpd 2.4 and PHP 7 in macOS</title>
      <link>https://htr3n.github.io/2017/09/apache-httpd-php-macos/</link>
      <pubDate>Mon, 25 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://htr3n.github.io/2017/09/apache-httpd-php-macos/</guid>
      <description>&lt;p&gt;Together, Apache HTTP server, PHP, and MySQL form a powerful and popular combination for Web development.  Mac OS X (from 10.0 Cheetah to 10.11 El Capitan) and macOS (10.12 Sierra and above) are often shipped with pre-installed versions of Apache HTTP server and PHP but these are often outdated and merely customised for macOS. The well-known bundles &lt;em&gt;*AMP&lt;/em&gt; (e.g. WAMP for Windows, LAMP for Linux, MAMP for Mac) are commonly used but also considered a tad bloated for the beginners like me ;).&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>