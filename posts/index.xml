<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog Posts on htr3n&#39;s</title>
    <link>https://htr3n.github.io/posts/</link>
    <description>Recent content in Blog Posts on htr3n&#39;s</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.</copyright>
    <lastBuildDate>Wed, 09 May 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://htr3n.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Integration Laravel 5 and Gentelella Admin Theme</title>
      <link>https://htr3n.github.io/2018/05/integration-laravel-5-and-gentelella-admin-theme/</link>
      <pubDate>Wed, 09 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://htr3n.github.io/2018/05/integration-laravel-5-and-gentelella-admin-theme/</guid>
      <description>Gentelella is a very nice and gently-looking Bootstrap based admin theme developed by Aigars Silkalns (known as puikinsh in Github), who founded colorlib.com. It can be integrated into several Web application frameworks. In this post, I noted down my simple development exercise in which Gentelella is used to decorated a Laravel 5 based Web application. This task is part of building my PHP based framework LaraMod.
Laravel can act as backend for any Web application.</description>
    </item>
    
    <item>
      <title>Node.js package managers: NPM and Yarn</title>
      <link>https://htr3n.github.io/2018/04/node.js-package-managers-npm-and-yarn/</link>
      <pubDate>Mon, 23 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://htr3n.github.io/2018/04/node.js-package-managers-npm-and-yarn/</guid>
      <description>A quick introduction Node.js is an increasingly popular and widely used JavaScript run-time nowadays. One of the fundamental and important aspects of Node.js, as many others, is to manage the dependencies among software artefacts at both compilation and run-time, front-end and back-end, JavaScripts and non-JavaScript resources. Better dependency management would advocate modularisation and decoupling of software components. Since the dawn of Node.js, several package managers have been developed, notably, npm, anymod (formerly component), volo, ringojs, bower, yarn, pnpm, to name but a few.</description>
    </item>
    
    <item>
      <title>Confusing Hugo issues: datetime and &#39;isset&#39;</title>
      <link>https://htr3n.github.io/2018/03/confusing-hugo-issues-datetime-and-isset/</link>
      <pubDate>Sat, 31 Mar 2018 08:55:31 +1100</pubDate>
      
      <guid>https://htr3n.github.io/2018/03/confusing-hugo-issues-datetime-and-isset/</guid>
      <description>Yesterday I got notified from Github for two opening issues of the Hugo&amp;rsquo;s theme hyde-hyde I have ported and developed.
The newest one is reported by jdayton3 (Jonathan Dayton) on wrong dates shown up. The issue seems very strange and difficult to spot. It took me a while to research around and found some relevant reports by Paul Heinlein and Dana Woodman, that Hugo date/time formatting is internally based on Golang, and therefore, uses a smart but confusing convention.</description>
    </item>
    
    <item>
      <title>Getting started with Webpack</title>
      <link>https://htr3n.github.io/2018/02/getting-started-with-webpack/</link>
      <pubDate>Fri, 16 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://htr3n.github.io/2018/02/getting-started-with-webpack/</guid>
      <description>&lt;p&gt;Per definition &lt;a href=&#34;https://webpack.js.org/concepts&#34;&gt;here&lt;/a&gt;, Webpack is a &lt;em&gt;static module bundler&lt;/em&gt; for Web applications. It analyses and processes the &lt;em&gt;input application&lt;/em&gt; and generates output &lt;em&gt;bundles&lt;/em&gt;. The design of Webpack architecture is highly modularised and extendable. In this post, I share here some notes on major aspects of Webpack since I&amp;rsquo;ve started learning it.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>First experience with Hugo</title>
      <link>https://htr3n.github.io/2018/01/first-experience-with-hugo/</link>
      <pubDate>Tue, 23 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://htr3n.github.io/2018/01/first-experience-with-hugo/</guid>
      <description>To commence my journey in software development, I have looked for a Web framework to build this blog. I have started writing blog posts mainly using (Multi)Markdown and plan to migrate other posts to Markdown too. Thus, it&amp;rsquo;s rather natural to go with built-in or first-class support for Markdown to minimise the migration effort.
Thus far I have not foreseen any great use of extensive backend storage and computation. So I narrowed down my search to static site generators with two prominent candidates Jekyll and Hugo popping up, for instance, here, here, and here.</description>
    </item>
    
    <item>
      <title>LaraMod - Modularised Laravel 5</title>
      <link>https://htr3n.github.io/2018/01/laramod/</link>
      <pubDate>Fri, 19 Jan 2018 17:39:00 +0700</pubDate>
      
      <guid>https://htr3n.github.io/2018/01/laramod/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://laravel.com&#34;&gt;Laravel&lt;/a&gt; is an amazing emerging, well-designed and well-developed PHP framework. It is currently under active development and has been among top Web development frameworks. The latest version of Laravel 5 imposes a conventional project structure that is well documented &lt;a href=&#34;https://laravel.com/docs/5.5/structure&#34;&gt;here&lt;/a&gt;. For a simple development project, the structure is totally fine. Nevertheless, unless some necesssary configurations you might not want to mix up your development codes and resources with Laravel&amp;rsquo;s. And you might also want to organise your project into submodules that are assigned to more than one team/person such that they can be developed silmutaneously. Thus, the need for complex submodule organisation is quite obvious.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Apache httpd 2.4 and PHP 7 in macOS</title>
      <link>https://htr3n.github.io/2017/09/apache-httpd-php-macos/</link>
      <pubDate>Mon, 25 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://htr3n.github.io/2017/09/apache-httpd-php-macos/</guid>
      <description>Together, Apache HTTP server, PHP, and MySQL form a powerful and popular combination for Web development. Mac OS X (from 10.0 Cheetah to 10.11 El Capitan) and macOS (10.12 Sierra and above) are often shipped with pre-installed versions of Apache HTTP server and PHP but these are often outdated and merely customised for macOS. The well-known bundles *AMP (e.g. WAMP for Windows, LAMP for Linux, MAMP for Mac) are commonly used but also considered bloated or a bit of overkill for the beginners like me ;).</description>
    </item>
    
  </channel>
</rss>